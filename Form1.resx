<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        POgmoP/Z
</value>
  </data>
</root>